from gpmodel_class import GPModel

prior_path = '../dataset/Prior.csv'
test_path = '../dataset/Test.csv'
final_prior_path = '../results/final_prior.csv'
batch_size = 10

model = GPModel(prior_path, test_path, batch_size)
#idx_list = [80, 432, 384, 293, 11, 27, 440, 272, 156, 423, 290, 287, 113, 164, 199, 184, 378, 202, 1, 291, 118, 269, 385, 215, 377, 190, 296, 44, 154, 400, 92, 129, 78, 99, 420, 472, 266, 40, 81, 307, 43, 289, 273, 448, 153, 314, 404, 444, 280, 419, 45, 249, 218, 429, 22, 239, 456, 317, 376, 231, 69, 277, 396, 430, 308, 42, 373, 210, 200, 76, 220, 366, 298, 149, 248, 135, 319, 454, 107, 82, 407, 125, 161, 343, 180, 134, 336, 83, 478, 13, 458, 281, 315, 339, 449, 90, 398, 262, 242, 186, 6, 386, 408, 16, 21, 0, 57, 64, 443, 187, 412, 51, 211, 371, 88, 8, 105, 286, 219, 475, 227, 345, 36, 338, 256, 63, 254, 60, 121, 136, 77, 255, 75, 142, 318, 68, 188, 224, 457, 350, 237, 354, 323, 301, 34, 251, 48, 321, 126, 340, 41, 208, 344, 214, 189, 228, 143, 66, 124, 152, 194]
#idx_list=[280, 206, 306, 326, 61, 224, 36, 360, 283, 207, 337, 49, 17, 458, 60, 109, 153, 41, 98, 52, 122, 392, 344, 420, 239, 241, 286, 372, 517, 154, 465, 511, 441, 79, 366, 35, 58, 494, 379, 322, 269, 99, 349, 32, 101, 251, 104, 191, 423, 307, 324, 185, 250, 87, 486, 2, 5, 399, 513, 13, 50, 311, 459, 477, 503, 27, 267, 152, 247, 94, 65, 1, 508, 416, 356, 213, 242, 252, 431, 31, 227, 149, 496, 395, 350, 339, 509, 274, 120, 413, 319, 359, 518, 321, 233, 298, 166, 68, 230, 284, 277, 142, 300, 105, 485, 194, 426, 317, 308, 346, 271, 209, 140, 222, 328, 464, 171, 178, 390, 362, 161, 291, 449, 276, 378, 203, 457, 403, 488, 244, 211, 132, 483, 523, 474, 228, 16, 232, 121, 493, 173, 83, 287, 23, 162, 389, 217, 304, 375, 262, 221, 202, 327, 47, 220, 380, 219, 33, 257, 443, 134, 133, 129, 91, 45, 330, 21, 115, 504, 476, 400, 514, 136, 75, 333, 218, 116, 429, 290, 309, 510, 163, 0, 135, 383, 472, 430, 48, 179, 491, 374, 151, 128, 245, 313, 495, 397, 63, 285, 436, 29, 54, 188, 427, 80, 189, 421, 469]
model.add_data_list(idx_list)
model.update_model(None)

r2 = model.calculate_r2()
print(r2)

model.write_final_prior(final_prior_path)

predictions_path= '../results/validation_predictions.csv'
model.save_predictions(predictions_path)
